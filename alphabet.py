# alphabet.py -- Renters a font into the neopixel array
# dlb, Dec 2023

# Following is a 7x5 font rendered in an 8x5 format
x_0 = (0,0,1,1,1,1,1,0, 0,1,0,0,0,0,0,1, 0,1,0,0,0,0,0,1, 0,1,0,0,0,0,0,1, 0,0,1,1,1,1,1,0 )
x_1 = (0,0,0,0,0,0,0,0, 0,1,0,0,0,0,0,1, 0,1,1,1,1,1,1,1, 0,0,0,0,0,0,0,1, 0,0,0,0,0,0,0,0 )
x_2 = (0,0,1,0,0,1,1,1, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,0,1,1,0,0,0,1 )
x_3 = (0,0,1,0,0,0,1,0, 0,1,0,0,0,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,0,1,1,0,1,1,0 )
x_4 = (0,1,1,1,1,0,0,0, 0,0,0,0,1,0,0,0, 0,0,0,0,1,0,0,0, 0,1,1,1,1,1,1,1, 0,0,0,0,1,0,0,0 )
x_5 = (0,1,1,1,1,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,0,1,1,0 )
x_6 = (0,0,1,1,1,1,1,0, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,0,1,1,0 )
x_7 = (0,1,0,0,0,0,0,0, 0,1,0,0,0,1,1,1, 0,1,0,0,1,0,0,0, 0,1,0,0,1,0,0,0, 0,1,1,1,0,0,0,0 )
x_8 = (0,0,1,1,0,1,1,0, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,0,1,1,0,1,1,0 )
x_9 = (0,0,1,1,0,0,1,0, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,1,0,0,1,0,0,1, 0,0,1,1,1,1,1,0 )
x_colon = (0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0, 0,0,0,1,0,1,0,0, 0,0,0,0,0,0,0,0, 0,0,0,0,0,0,0,0 )
x_plus  = (0,0,0,0,1,0,0,0, 0,0,0,0,1,0,0,0, 0,0,1,1,1,1,1,0, 0,0,0,0,1,0,0,0, 0,0,0,0,1,0,0,0 )
x_minus = (0,0,0,0,1,0,0,0, 0,0,0,0,1,0,0,0, 0,0,0,0,1,0,0,0, 0,0,0,0,1,0,0,0, 0,0,0,0,1,0,0,0 )
x_equal = (0,0,0,0,1,0,1,0, 0,0,0,0,1,0,1,0, 0,0,0,0,1,0,1,0, 0,0,0,0,1,0,1,0, 0,0,0,0,1,0,1,0 )

chars = "0123456789:+-="
font = (x_0, x_1, x_2, x_3, x_4, x_5, x_6, x_7, x_8, x_9, x_colon, x_plus, x_minus, x_equal)

def get_index(c):
    ic = 0
    while ic < len(chars):
        if c == chars[ic]: return ic
        ic += 1
    return -1

def render(pixels, column0, color, c):
    '''Renders a character in the neopixel array starting at column0, using
    the given color.'''
    ic = get_index(c)
    if ic < 0: return
    bitmap = font[ic]
    for icolumn in range(5):
        for irow in range(8):
            indx = icolumn * 8 + irow
            if bitmap[indx] != 0:
                irealcol = column0 + icolumn
                if irealcol % 2 == 0:
                    pixels[irealcol * 8 + irow] = color
                else:
                    pixels[irealcol * 8 + (7 - irow)] = color


